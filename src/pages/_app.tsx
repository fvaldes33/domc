import "@/styles/globals.css";
import { Inter } from "@next/font/google";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { App } from "konsta/react";
import type { AppProps } from "next/app";
import Head from "next/head";
import { useState } from "react";

import { useGetPreference } from "@/hooks/usePreferences";
import { LoadingScreen } from "@/components/LoadingScreen";
import { SetupScreen } from "@/components/SetupScreen";
import { MissonControlProvider } from "@/components/MissionControlProvider";
import { classNames } from "@/utils/classNames";

const inter = Inter({ subsets: ["latin"] });

export default function MyApp({ Component, pageProps }: AppProps) {
  const [queryClient] = useState(() => new QueryClient());

  return (
    <QueryClientProvider client={queryClient}>
      <Head>
        <title>Digital Ocean Mission Control</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no, viewport-fit=cover"
        />
      </Head>
      <AppWrapper>
        <Component {...pageProps} />
      </AppWrapper>
    </QueryClientProvider>
  );
}

function AppWrapper({ children }: { children: React.ReactNode }) {
  const { data: token, isLoading } = useGetPreference<string | null>({
    key: "token",
  });
  const { data: colorScheme } = useGetPreference<"light" | "dark">({
    key: "colorScheme",
    defaultValue: "light",
  });

  return (
    <App
      theme="ios"
      dark={colorScheme === "dark"}
      safeAreas
      className={classNames(
        // inter.className,
        "absolute inset-0 overscroll-y-none"
      )}
    >
      {isLoading ? (
        <LoadingScreen />
      ) : token ? (
        <MissonControlProvider theme={colorScheme ?? "light"} token={token}>
          {children}
        </MissonControlProvider>
      ) : (
        <SetupScreen />
      )}
    </App>
  );
}
